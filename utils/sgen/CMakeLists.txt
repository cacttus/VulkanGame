cmake_minimum_required(VERSION 3.0.0)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)
project(sgen VERSION 1.2.0)


add_executable(sgen ${PROJECT_SOURCE_DIR}/sgen.cpp)

#Inherited
#Project_source_dir is the project root.
#set(VG_BIN_DIR ${PROJECT_SOURCE_DIR}/bin/)
#set(VG_LIB_DIR ${PROJECT_SOURCE_DIR}/lib/)
#set(VG_BIN_DEBUG_DIR ${VG_BIN_DIR})
#set(VG_BIN_RELEASE_DIR ${VG_BIN_DIR})

# if(GENERATOR_IS_MULTI_CONFIG)
#   message("Error: Generator is MULTI CONFIG")
#   return()
# 	# "Multi-config generators use CMAKE_CONFIGURATION_TYPES as the set of configurations and ignore CMAKE_BUILD_TYPE."
# else()
# 	message(" + BUILD TYPE " ${CMAKE_BUILD_TYPE})
# 	if(CMAKE_BUILD_TYPE STREQUAL "Debug")
# 		set(VG_CONFIG_SHORT "d")
# 	else ()
# 		set(VG_CONFIG_SHORT "r")
# 	endif()
# endif()
 
set(SGEN_OUTPUT_NAME ${PROJECT_NAME}-${CMAKE_PROJECT_VERSION})

set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME ${SGEN_OUTPUT_NAME}
  RUNTIME_OUTPUT_DIRECTORY_DEBUG ${VG_BIN_DEBUG_DIR}
  RUNTIME_OUTPUT_DIRECTORY_RELEASE ${VG_BIN_RELEASE_DIR}
  RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${VG_BIN_DEBUG_DIR}
  RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${VG_BIN_DEBUG_DIR}
  ARCHIVE_OUTPUT_DIRECTORY ${VG_LIB_DIR}
) 

#target_link_libraries(${PROJECT_NAME} ${SDL2_LIBRARIES} ncurses)


set(ADDL_LIBS "")
if(CMAKE_COMPILER_IS_GNUCXX OR MINGW OR ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
    set(SG_GCC_COMPILE_GLOBAL -DCMAKE_PROJECT_VERSION="${CMAKE_PROJECT_VERSION}") 
    set(SG_GCC_LINK_GLOBAL -pthread) 

    target_compile_options(${PROJECT_NAME} PRIVATE "$<$<CONFIG:RELEASE>:" ${SG_GCC_COMPILE_GLOBAL} ">")
    target_compile_options(${PROJECT_NAME} PRIVATE "$<$<CONFIG:DEBUG>:" ${SG_GCC_COMPILE_GLOBAL} -D_DEBUG -D_GLIBCXX_DEBUG ">")

    target_link_options(${PROJECT_NAME} PRIVATE "$<$<CONFIG:RELEASE>:" ${SG_GCC_LINK_GLOBAL} ">")
    target_link_options(${PROJECT_NAME} PRIVATE "$<$<CONFIG:DEBUG>:" ${SG_GCC_LINK_GLOBAL} ">")

endif()
target_link_libraries(${PROJECT_NAME} PRIVATE ${VULKAN_LIBRARIES} ${OPENGL_LIBRARIES} ${SDL2_LIBRARIES} ${SDLNET_LIBRARIES} ${ADDL_LIBS} ${LUA_LIBRARIES} ${X11_LIBRARIES})

